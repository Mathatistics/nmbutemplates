library(nmbutemplates)
install.packages("testit")
library(nmbutemplates)
rmarkdown::pandoc_available()
library(nmbutemplates)
library(nmbutemplates)
nmbutemplates:::find_resource(pdf_document_format)
nmbutemplates:::find_resource("pdf_document_format")
nmbutemplates:::find_resource("exam_question")
file.exists(nmbutemplates:::find_resource("exam_question"))
nmbutemplates:::pdf_document_format("exam_question")
rmarkdown:::pdf_document()
rmarkdown:::pdf_document
rmarkdown:::pdf_document
grep("template_pandoc", rmarkdown:::pdf_document)
grep("template_pandoc", capture.output(rmarkdown:::pdf_document))
grep("template", capture.output(rmarkdown:::pdf_document))
grep("template", capture.output(rmarkdown:::pdf_document), value = TRUE)
grep("pandoc", capture.output(rmarkdown:::pdf_document), value = TRUE)
library(nmbutemplates)
??convert
rmarkdown:::pandoc_convert
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
system.file(package = "nmbutemplates")
library(nmbutemplates)
test_format("exam_question")
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
test_format("exam_question")
source('~/Downloads/nmbutemplates/R/utils.R')
source('~/Downloads/nmbutemplates/R/exam_question.R')
test_format("exam_question")
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
test_format("exam_question")
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
test_format("exam_question")
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R', echo=TRUE)
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R', echo=TRUE)
Sys.getenv("NOT_CRAN")
identical(Sys.getenv("NOT_CRAN"), "true")
Sys.setenv("NOT_CRAN"="true")
!identical(Sys.getenv("NOT_CRAN"), "true")
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R', echo=TRUE)
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R', echo=TRUE)
dir <- tempfile()
dir.create(dir)
oldwd <- setwd(dir)
on.exit(setwd(oldwd), add = TRUE)
dir
# create a draft of the format
testdoc <- paste0(name, ".Rmd")
testdoc
rmarkdown::draft(testdoc, system.file("rmarkdown", "templates", name, package = "nmbutemplates"),
create_dir = FALSE, edit = FALSE)
message('Rendering the ', name, ' format...')
output_file <- rmarkdown::render(testdoc, quiet = TRUE)
testdoc
rmarkdown::render(testdoc)
rmarkdown::render(testdoc, run_pandoc = FALSE)
rmarkdown::render(testdoc, run_pandoc = TRUE)
?rmarkdown::render
source('~/Downloads/nmbutemplates/tests/testit/test-formats.R')
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
library(nmbutemplates)
